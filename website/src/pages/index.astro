---
import { Image } from "astro:assets";

import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import ImgCard from "../components/ImgCard.astro";

import FinalImage from "../images/final.jpg";
import CivImage from "../images/civ.jpg";
import DebugImage from "../images/debug.jpg";
import PrototypeImage from "../images/prototype.jpg";
---

<Layout title="The M88 Computer">
  <main>
    <h1>The <span class="scanlines">M88</span> Computer</h1>
    <h2>Why?</h2>
    <p>
      The <span class="scanlines">M88</span> is a hobby project that seeks to build
      a modern computer that is compatible with the software and hardware of the
      late 1980s. I originally set out to build a computer that could support <a
        href="https://civilization.2k.com/civ/"
        target="_blank">Sid Meier's Civilization</a
      >, and achieved just that. Now, the project has expanded to explore more
      possibilities, such as experimenting with I2C bus connectivity to mix
      modern I2C devices with retro software.
    </p>
    <h2>Features</h2>
    <p>
      <li>Built around the Intel 8088 CPU, running at 8 MHz</li>
      <li>
        Sockets for 640K of RAM in banks of 128K, with an optional additional
        bank at <code>E000:0000</code> for DOS upper memory blocks
      </li>
      <li>4 8-bit ISA card slots</li>
      <li>
        ATX power connector and Micro-ATX form factor - use an off-the-shelf ATX
        power supply and PC case!
      </li>
      <li>Built-in ATX fan headers</li>
      <li>PS/2 keyboard and mouse ports</li>
      <li>An ATTiny to take care of system resets and ATX power signals</li>
      <li>Primarily designed using discrete logic in 74-series ICs</li>
      <li>
        Built-in I2C bus with <a
          href="https://learn.adafruit.com/introducing-adafruit-stemma-qt/what-is-stemma"
          target="_blank">STEMMA connectors</a
        > to easily integrate with external devices
      </li>
    </p>
    <h2>Gallery</h2>
    <p>
      <div class="image-gallery">
        <ImgCard image={FinalImage} width={350} alt="The M88 Computer"
          >The <span class="scanlines">M88</span> Computer</ImgCard
        >
        <ImgCard
          image={CivImage}
          width={350}
          alt="The M88 Computer running Civilization"
          >An early <span class="scanlines">M88</span> prototype running Civilization</ImgCard
        >
        <ImgCard
          image={PrototypeImage}
          width={350}
          alt="An early prototype of the M88 Computer"
          >An early prototype for initial design qualification</ImgCard
        >
      </div>
    </p>
    <h2>Development Log and Manual</h2>
    <p>
      You can read more about the development of the computer in this <a
        href="https://mattiselin.com/2024/05/25/building-my-own-computer/"
        target="_blank">development log</a
      >.
    </p>
    <p>
      You can also read the (work-in-progress) <a href="/docs/manual.pdf"
        >manual</a
      > for the computer, which includes a reference for the hardware and software
      of the <span class="scanlines">M88</span>.
    </p>
    <h2>Additional&nbsp;<span class="scanlines">M88</span>&nbsp;Peripherals</h2>
    <p>
      Throughout the development of the <span class="scanlines">M88</span>, I've
      designed a few peripherals to help with development and testing.
    </p>
    <ul class="link-card-grid">
      <Card title="ISA Breakout" href="/peripherals/isa-breakout"
        >An 8-bit ISA card that breaks all signals out to headers for easy
        access.</Card
      >
      <Card title="ISA-to-I2C Interface" href="/peripherals/isa-i2c"
        >An 8-bit ISA card that provides a controller for an external I2C bus.</Card
      >
    </ul>
  </main>
</Layout>

<style>
  .image-gallery {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: stretch;
  }
  @media (max-width: 1400px) {
    .image-gallery {
      flex-direction: column;
    }
  }
  .gallery-image {
    margin: 1em;
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
