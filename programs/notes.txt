
2024-04-15: first prototype board works.

Issues that came up bringing the thing online:
- CS# signals are all floating until IO#/M is pulled low, need a pull-up! (test with 7SEG_CS#)
  - they actually aren't floating, this was a misunderstanding
- 74LS154 are wide not narrow footprints
  - buying adapters for this, but need to fix in next fab
- is the memory 128K or 64K??
  - it is 128K, but the DMUX 74LS154 is taking A16/A18/A19 into account, which limits RAM to 64K
  - quick fix is to tie pins 21, 22, 23 to GND
  - need a better way to do CS#'s for RAM & BIOS
- just use an 8-bit latch/register for the 7-seg, the 4-bit one is a pain to find


74LS154s are kinda hard to find. Look into more readily available options...
 - 74LS138s are much easier to find (Mouser has them!) - 3-to-8.
   Truly simpler logic.

todo:
- [x] Move to 8-bit latch for 7-seg (with two displays, why not)
- [x] Stop using LS154s
- [ ] Condense all the memory chip selects into one DMUX
- [ ] Fix BIOS ROM chip select after ^ happens
- [ ] Consider adding 128K of RAM at 0x80000


2024-04-23: PCB routing is done on the main board

Considering doing a run with DNP on most of the ancillary stuff (PS/2, ISA bus, etc) to test DMA

Realized that I/O port 0x60 is a combo of Intel PPI and the KB controller!
- 0x60, 0x64 (A0, A2) select the KBC
- 0x61, 0x62, 0x63 select the 3x PPI outputs
- 0x61 is where the speaker gate comes from!

IBM PC AT used a PROM with A0, A4, to do chip select for RTC (0x70) and KBC (0x60/0x64), and to
generate RTC RD/~WR signal from IOW/IOR. (PROM also got the 0x60-0x80 I/O CS~)

In the PC/AT, they removed the PPI and kept only "Port B" functions on port 0x61 e.g. PC speaker gate